# Default values for nifi-registry.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: apache/nifi-registry
  pullPolicy: IfNotPresent
  tag: "1.14.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1000
  runAsUser: 1000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 443

properties:
  httpPort: 18080
  httpsPort: 18443

openshift:
  route:
    enabled: false
    path: /
    host: ""

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: nifi-registry
      paths: ["/"]
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

## Persist data to a persistent volume
persistence:
  enabled: false
  databaseflowStorage:
    storageClass: "managed-premium"
    accessMode: ReadWriteOnce
    size: 20Gi

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

## If true, install the Nifi registry
replicaCount: 1 # not tested for more replicas
url: ""
port: 18443
## Add values for the nifi-registry here
## ref: https://github.com/dysnix/charts/blob/master/nifi-registry/values.yaml
image:
  repository: apache/nifi-registry
  pullPolicy: IfNotPresent
  tag: "1.14.0"
serviceAccount:
  create: true
  name: nifi-registry
  annotations: {}
securityContext:
  runAsUser: 1000
  fsGroup: 1000
properties:
  externalSecure: true
  webProxyHost: "nifi-registry"
  clusterSecure: true
  httpPort: 18080
  httpsPort: 18443
service:
  type: ClusterIP
auth:
  admin: "CN=admin, OU=NIFI"
  predefinedAdmins: ["joe@thetrask.org","karel@thetrask.md","blazena@thetrask.com"]
# resources:
#    limits:
#      cpu: 100m
#      memory: 1024Mi
#    requests:
#      cpu: 100m
#      memory: 400Mi
#Configure metrics
metrics:
  prometheus:
    # Enable Prometheus metrics
    enabled: false
    # Port used to expose Prometheus metrics
    port: 9092
    serviceMonitor:
      # Enable deployment of Prometheus Operator ServiceMonitor resource
      enabled: false
      # Additional labels for the ServiceMonitor
      labels: {}
#global characteristics
global:
  tls:
    caService:
      port: 9090
    token: sixteenCharacters
    admin:
      cn: admin
    enabled: true
    image:
        repository: apache/nifi-toolkit
        tag: "1.14.0"
        pullPolicy: IfNotPresent
  predefinedNodeIdentitiesCount: 5
  auth:
    admin: "CN=admin, OU=NIFI"
    oidc:
      enabled: true
      directoryId: d2480fab-7029-4378-9e54-3b7a474eb327
      discoveryUrl: https://login.microsoftonline.com/d2480fab-7029-4378-9e54-3b7a474eb327/v2.0/.well-known/openid-configuration
      clientId: 294d0e21-4f5a-4bdc-a6c1-4981f423b63a
      clientSecret: ""
      claimIdentifyingUser: upn
      # fallbackClaimIndetifyingUser: upn
      ## Request additional scopes, for example profile
      additionalScopes: profile
ca:
  enabled: true
  persistence:
    enabled: false
  server: ""
  service:
    port: 9090
  image:
    repository: apache/nifi-toolkit 
    pullPolicy: IfNotPresent
    tag: "1.14.0"
  token: sixteenCharacters
  admin:
    cn: admin
  serviceAccount:
    create: true
    name: nifi-ca
  openshift:
    scc:
      enabled: false
